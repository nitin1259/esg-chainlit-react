import React, { useEffect, useState } from "react";

interface Document {
  documentName: string;
  metadata: {
    documentType: string;
    referenceLink: string | null;
    generatedBy: string;
    reportYear: string;
  };
}

const ReportDisplayComponent: React.FC = () => {
  const [reportYear, setReportYear] = useState<string>("");
  const [documents, setDocuments] = useState<Document[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(false);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setReportYear(e.target.value);
  };

  const fetchReports = async () => {
    setIsLoading(true);
    try {
      const response = await fetch(
        "http://localhost:8000/esgreports/retrieve",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ reportYear }),
        }
      );
      if (!response.ok) {
        throw new Error("Failed to fetch reports");
      }
      const data = await response.json();
      setDocuments(data.documents);
      setIsLoading(false);
    } catch (error) {
      console.error("Error fetching reports:", error);
      setIsLoading(false);
    }
  };

  useEffect(() => {
    if (reportYear) {
      fetchReports();
    }
  }, [reportYear]);

  return (
    <div className="p-4">
      <div className="mb-4">
        <label htmlFor="reportYear" className="mr-2">
          Report Year:
        </label>
        <input
          type="text"
          id="reportYear"
          value={reportYear}
          onChange={handleInputChange}
          className="border px-2 py-1"
          placeholder="Enter report year"
        />
        <button
          onClick={fetchReports}
          className="ml-2 bg-blue-500 text-white px-4 py-1 rounded hover:bg-blue-600"
        >
          Fetch Reports
        </button>
      </div>
      {isLoading ? (
        <p>Loading...</p>
      ) : (
        <div>
          <h1 className="text-2xl font-bold mb-4">Reports for {reportYear}</h1>
          {documents.map((document, index) => (
            <div key={index} className="border p-4 mb-4">
              <h2 className="text-lg font-semibold">{document.documentName}</h2>
              <p>
                <strong>Document Type:</strong> {document.metadata.documentType}
              </p>
              <p>
                <strong>Generated By:</strong> {document.metadata.generatedBy}
              </p>
              <p>
                <strong>Report Year:</strong> {document.metadata.reportYear}
              </p>
              {document.metadata.documentType === "URL" && (
                <p>
                  <strong>Reference Link:</strong>{" "}
                  <a>{document.metadata.referenceLink}</a>
                </p>
              )}
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default ReportDisplayComponent;
